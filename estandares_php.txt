Estándares de programación utilizados del lado del servidor (PHP)

Justificación:
El presente documento fue creado con el objetivo de describir los estandares de programación utilizados para PHP
que se aplicaron al proyecto de SGE, hecho por los desarrolladores: 
-Fernando alonso Moreno Flores.

Introducción:
Este documento tiene como objetivo establecer una serie de estándares y buenas prácticas para la programación en PHP, 
con el fin de garantizar la calidad, legibilidad y mantenibilidad del código. 

-----------------------------------------------------------------------------------------------------------------------------

Estructura del Código:
1. Organización de Archivos y Directorios:
Clases y Modelos: Las clases que manejan lógica de negocio o datos deben estar ubicadas en el directorio de modelos: 
- /models/handler: que se utiliza para manejar la lógica del negocio. 
- /models/data: que se utiliza para el manejo de datos.

Servicios: Los scripts que manejan solicitudes y respuestas deben estar ubicados en un directorio separado, en este caso: 
/servicios.

-----------------------------------------------------------------------------------------------------------------------------

2. Nombres de Clases y Métodos:
-Clases: Deben utilizar el formato PascalCase y ser descriptivas de su función, 
por ejemplo: 
estudiante_handler.
estudiante_data.

-Métodos: Deben utilizar el formato camelCase y describir claramente la acción que realizan, por ejemplo: 
-createRow 
-updateRow.

-----------------------------------------------------------------------------------------------------------------------------

3. Nomenclatura de Variables:
-Nombres Descriptivos: Se utilizan nombres descriptivos en camelCase para las variables dentro del handler, por ejemplo:
protected $nombre = null;
protected $apellido = null;

-Nombres Significativos: Los nombres de variables indican claramente su propósito, por ejemplo:
protected $correo = null;
protected $nacimiento = null;

-----------------------------------------------------------------------------------------------------------------------------

4. Se utiliza la convención de autocarga PSR-4 para la organización de las clases.
Las clases se encuentran en directorios con la estructura de nombres de dominio. Por ejemplo, la clase AdministradoresData
se encuentra en el directorio app/models/data.

Se utiliza la instrucción require_once para incluir las clases necesarias.

-----------------------------------------------------------------------------------------------------------------------------

5. Se utilizan declaraciones de apertura de PHP (<?php) en los archivos de php. (En nuestro caso,
no es necesario que el código tenga un cierre ?>, ya que no se incluye código HTML ni se genera salida directamente.)

Referencia: https://www.php-fig.org/per/coding-style/

-----------------------------------------------------------------------------------------------------------------------------

Conclusión
Este documento proporciona una guía para mantener un código limpio, legible y fácil de mantener en PHP. 
Siguiendo estos estándares y prácticas recomendadas, podremos asegurarnos de que nuestro código sea consistente 
y de alta calidad.